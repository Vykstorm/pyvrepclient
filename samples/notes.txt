
- Para obtener un objeto:
    code, right_motor = vrep.simxGetObjectHandle(clientID, 'ePuck_rightJoint', vrep.simx_opmode_blocking)


- Establece la velocidad de un motor.
    code = vrep.simxSetJointTargetVelocity(clientID, left_motor, 0, vrep.simx_opmode_oneshot)

- Leer el valor de un sensor de proximidad.
La primera llamada tiene que ser modo "streaming", la segunda modo buffer

...
    code, state, point, object, normal = vrep.simxReadProximitySensor(clientID, sensor, vrep.simx_opmode_streaming)

    for i in range(0, 100):
        code, state, point, object, normal = vrep.simxReadProximitySensor(clientID, sensor, vrep.simx_opmode_buffer)
        print(code, state, point, object, normal)
        sleep(1)



Para la cámara (GrayScale):
    code, camera = vrep.simxGetObjectHandle(clientID, 'ePuck_camera', vrep.simx_opmode_blocking)

    code, resolution, pixels = vrep.simxGetVisionSensorImage(clientID, camera, 1, vrep.simx_opmode_streaming)
    sleep(1)
    code, resolution, pixels = vrep.simxGetVisionSensorImage(clientID, camera, 1, vrep.simx_opmode_blocking)
    pixels = numpy.uint8(numpy.array(pixels))
    pixels = numpy.reshape(pixels, resolution)

También, para obtener datos de la misma de forma continua, el primer modo debe ser streaming y los siguientes
en modo buffer


Para la cámara (RGB):
